#!/bin/bash
export WANDB_MODE=offline 
export WANDB_DIR=/model 
export WANDB_API_KEY="5332e67da7daf0a41f52e3a3ed1377882ed276a2"
export SGL_DISABLE_TP_MEMORY_INBALANCE_CHECK=True
python -u -m recipe.gspo_ib.main_ib \
        data.dataloader_num_workers=0 \
        algorithm.adv_estimator=grpo \
        actor_rollout_ref.actor.policy_loss.loss_mode='gspo' \
        actor_rollout_ref.actor.loss_agg_mode="seq-mean-token-mean" \
        actor_rollout_ref.actor.clip_ratio_low=0.0003 \
        actor_rollout_ref.actor.clip_ratio_high=0.0004 \
        actor_rollout_ref.actor.strategy="fsdp2" \
        data.shuffle=True \
        data.prompt_key=prompt \
        data.truncation='error' \
        data.filter_overlong_prompts=true \
        data.train_batch_size=4 \
        data.max_prompt_length=256 \
        data.max_response_length=512 \
        actor_rollout_ref.rollout.n=2 \
        actor_rollout_ref.model.path=/model/Qwen2.5-0.5B \
        data.train_files=/model/data/gsm8k/train.parquet \
        data.val_files=/model/data/gsm8k/test.parquet \
        trainer.logger="['console','wandb']" \
        trainer.project_name='RL-GSPO-DEBUG' \
        trainer.experiment_name='debug-gspo-lonspo-Qwen2.5-0.5B-RL' \
        trainer.n_gpus_per_node=1 \
        trainer.nnodes=1 \
        trainer.val_before_train=False \
        trainer.test_freq=2 \
        trainer.save_freq=1 \
        trainer.total_epochs=1 \
        trainer.total_training_steps=2 \
        trainer.default_local_dir=/app/verl/checkpoints \
        trainer.resume_mode=auto \
        actor_rollout_ref.actor.optim.lr=1e-6 \
        actor_rollout_ref.actor.optim.lr_warmup_steps_ratio=0.05 \
        actor_rollout_ref.actor.optim.weight_decay=0.1 \
        actor_rollout_ref.actor.ppo_mini_batch_size=16 \
        actor_rollout_ref.actor.ppo_micro_batch_size_per_gpu=1 \
        actor_rollout_ref.actor.grad_clip=1.0 \
        actor_rollout_ref.actor.entropy_coeff=0 \
        algorithm.use_kl_in_reward=False \
        algorithm.kl_ctrl.kl_coef=0.0 \
        actor_rollout_ref.actor.use_kl_loss=False \
        actor_rollout_ref.actor.kl_loss_coef=0.0 \
        actor_rollout_ref.model.enable_gradient_checkpointing=True \
        actor_rollout_ref.model.use_remove_padding=True \
        actor_rollout_ref.actor.use_dynamic_bsz=True \
        actor_rollout_ref.ref.log_prob_use_dynamic_bsz=True \
        actor_rollout_ref.rollout.log_prob_use_dynamic_bsz=True \
        actor_rollout_ref.actor.ppo_max_token_len_per_gpu=4096 \
        actor_rollout_ref.ref.log_prob_max_token_len_per_gpu=4096 \
        actor_rollout_ref.rollout.log_prob_max_token_len_per_gpu=4096 \
        actor_rollout_ref.actor.fsdp_config.param_offload=True \
        actor_rollout_ref.actor.fsdp_config.optimizer_offload=True \
        actor_rollout_ref.actor.ulysses_sequence_parallel_size=1 \
        actor_rollout_ref.rollout.name=vllm \
        actor_rollout_ref.rollout.mode=sync \
        actor_rollout_ref.rollout.gpu_memory_utilization=0.8 \
        actor_rollout_ref.rollout.tensor_model_parallel_size=1 \
        actor_rollout_ref.rollout.enable_chunked_prefill=True \
        actor_rollout_ref.rollout.max_num_batched_tokens=2048 \
        actor_rollout_ref.rollout.temperature=1.0 \
        actor_rollout_ref.rollout.top_p=1.0 \
        actor_rollout_ref.rollout.top_k=-1 \
        actor_rollout_ref.rollout.val_kwargs.temperature=1.0 \
        actor_rollout_ref.rollout.val_kwargs.top_p=0.7 \
        actor_rollout_ref.rollout.val_kwargs.top_k=-1 \
        actor_rollout_ref.rollout.val_kwargs.do_sample=true \
        actor_rollout_ref.rollout.val_kwargs.n=1 \
        actor_rollout_ref.model.enable_activation_offload=True \
        actor_rollout_ref.actor.kl_loss_type=low_var_kl \
        actor_rollout_ref.rollout.log_prob_micro_batch_size_per_gpu=1 \
        actor_rollout_ref.ref.log_prob_micro_batch_size_per_gpu=1 \
        actor_rollout_ref.rollout.enforce_eager=False \
        actor_rollout_ref.rollout.free_cache_engine=True \
        reward_model.reward_manager=gspoib \
        custom_reward_function.path=recipe/gspo_ib/reward_function.py \
        custom_reward_function.name=compute_score \
        algorithm.eta=1.0 \
        algorithm.gamma=1.0